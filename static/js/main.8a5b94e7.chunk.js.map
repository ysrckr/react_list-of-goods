{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","resetButton","type","className","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAvDD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNK,EAAY,YAAOC,GAGzB,OAAQH,GACN,KAAKP,EAASW,SACZF,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKd,EAASgB,OACZP,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAW7D,OAJIb,GACFK,EAAaS,UAGRT,EA8BcU,CAAkBlB,EAAiB,CACtDM,WACAH,eAMIgB,GAHWb,IAAaP,EAASM,MACRF,IAG7B,wBACEiB,KAAK,SACLC,UAAU,4BACVC,QAjBU,WACZf,EAAYR,EAASM,MACrBD,GAAc,IAYd,mBASF,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UACEE,IAAG,iBAAkB,CACnB,WAAYjB,IAAaP,EAASW,WAGtCY,QAzCmB,WACzBf,EAAYR,EAASW,WAiCjB,iCAYA,wBACEU,KAAK,SACLC,UACEE,IAAG,oBAAqB,CACtB,WAAYjB,IAAaP,EAASgB,SAGtCO,QAjDa,WACnBf,EAAYR,EAASgB,SAyCjB,4BAYA,wBACEK,KAAK,SACLC,UACEE,IAAG,oBAAqB,CACtB,YAAapB,IAGjBmB,QArEa,WACnBlB,GAAeD,IA6DX,qBAYCgB,KAGH,6BACE,6BACGX,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cCjJrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a5b94e7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverseGoods = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const isSorted = sortType !== SortType.NONE;\n  const isModified = isSorted || isReversed;\n\n  const resetButton = isModified && (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={reset}\n    >\n      Reset\n    </button>\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })\n          }\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {resetButton}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}